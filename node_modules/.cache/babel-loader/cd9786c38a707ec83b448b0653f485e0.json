{"ast":null,"code":"var _jsxFileName = \"/Users/chenyuf2/Desktop/three-shader/src/components/Scene/Scene.js\",\n    _s = $RefreshSig$();\n\nimport ImagePlane from \"../ImagePlane/ImagePlane\";\nimport { Suspense } from \"react\";\nimport { IMAGE_BLOCK_WIDTH, IMAGE_GAP } from \"../../utils/utilFormat\";\nimport { useThree } from \"@react-three/fiber\";\nimport { ScrollControls, Scroll } from \"@react-three/drei\";\nimport { imagesArr } from \"../../utils/utilFormat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Scene = () => {\n  _s();\n\n  const numImages = imagesArr.length;\n  const {\n    width\n  } = useThree(state => state.viewport);\n  const itemsLength = width + (numImages - 1) * (IMAGE_BLOCK_WIDTH + IMAGE_GAP);\n  const imgWidth = 0.65;\n  const imgGap = 0.15;\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: null,\n    children: /*#__PURE__*/_jsxDEV(ScrollControls, {\n      horizontal: true,\n      damping: 5,\n      pages: itemsLength / width,\n      children: /*#__PURE__*/_jsxDEV(Scroll, {\n        children: imagesArr.map((url, index) => {\n          const imagePosition = [IMAGE_BLOCK_WIDTH * index + IMAGE_GAP * index, 0, 0];\n          return /*#__PURE__*/_jsxDEV(ImagePlane, {\n            index: index,\n            imgUrl: url,\n            position: imagePosition\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Scene, \"IpnJ6lEh1uS9mmdIchuxUYOu3jw=\", false, function () {\n  return [useThree];\n});\n\n_c = Scene;\nexport default Scene;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scene\");","map":{"version":3,"sources":["/Users/chenyuf2/Desktop/three-shader/src/components/Scene/Scene.js"],"names":["ImagePlane","Suspense","IMAGE_BLOCK_WIDTH","IMAGE_GAP","useThree","ScrollControls","Scroll","imagesArr","Scene","numImages","length","width","state","viewport","itemsLength","imgWidth","imgGap","map","url","index","imagePosition"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,0BAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,SAASC,iBAAT,EAA4BC,SAA5B,QAA6C,wBAA7C;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,cAAT,EAAyBC,MAAzB,QAAuC,mBAAvC;AACA,SAASC,SAAT,QAA0B,wBAA1B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,SAAS,GAAGF,SAAS,CAACG,MAA5B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYP,QAAQ,CAAEQ,KAAD,IAAWA,KAAK,CAACC,QAAlB,CAA1B;AACA,QAAMC,WAAW,GAAGH,KAAK,GAAG,CAACF,SAAS,GAAG,CAAb,KAAmBP,iBAAiB,GAAGC,SAAvC,CAA5B;AACA,QAAMY,QAAQ,GAAG,IAAjB;AACA,QAAMC,MAAM,GAAG,IAAf;AACA,sBACE,QAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,IAApB;AAAA,2BACE,QAAC,cAAD;AAAgB,MAAA,UAAU,MAA1B;AAA2B,MAAA,OAAO,EAAE,CAApC;AAAuC,MAAA,KAAK,EAAEF,WAAW,GAAGH,KAA5D;AAAA,6BACE,QAAC,MAAD;AAAA,kBACGJ,SAAS,CAACU,GAAV,CAAc,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC7B,gBAAMC,aAAa,GAAG,CACpBlB,iBAAiB,GAAGiB,KAApB,GAA4BhB,SAAS,GAAGgB,KADpB,EAEpB,CAFoB,EAGpB,CAHoB,CAAtB;AAKA,8BACE,QAAC,UAAD;AAEE,YAAA,KAAK,EAAEA,KAFT;AAGE,YAAA,MAAM,EAAED,GAHV;AAIE,YAAA,QAAQ,EAAEE;AAJZ,aACOD,KADP;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SAdA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA7BD;;GAAMX,K;UAEcJ,Q;;;KAFdI,K;AA+BN,eAAeA,KAAf","sourcesContent":["import ImagePlane from \"../ImagePlane/ImagePlane\";\nimport { Suspense } from \"react\";\n\nimport { IMAGE_BLOCK_WIDTH, IMAGE_GAP } from \"../../utils/utilFormat\";\nimport { useThree } from \"@react-three/fiber\";\nimport { ScrollControls, Scroll } from \"@react-three/drei\";\nimport { imagesArr } from \"../../utils/utilFormat\";\n\nconst Scene = () => {\n  const numImages = imagesArr.length;\n  const { width } = useThree((state) => state.viewport);\n  const itemsLength = width + (numImages - 1) * (IMAGE_BLOCK_WIDTH + IMAGE_GAP);\n  const imgWidth = 0.65;\n  const imgGap = 0.15;\n  return (\n    <Suspense fallback={null}>\n      <ScrollControls horizontal damping={5} pages={itemsLength / width}>\n        <Scroll>\n          {imagesArr.map((url, index) => {\n            const imagePosition = [\n              IMAGE_BLOCK_WIDTH * index + IMAGE_GAP * index,\n              0,\n              0,\n            ];\n            return (\n              <ImagePlane\n                key={index}\n                index={index}\n                imgUrl={url}\n                position={imagePosition}\n              />\n            );\n          })}\n        </Scroll>\n      </ScrollControls>\n    </Suspense>\n  );\n};\n\nexport default Scene;\n"]},"metadata":{},"sourceType":"module"}