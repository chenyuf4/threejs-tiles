{"ast":null,"code":"var _jsxFileName = \"/Users/chenyuf2/Desktop/three-shader/src/components/ImagePlane/ImagePlane.js\",\n    _s = $RefreshSig$();\n\nimport { useTexture } from \"@react-three/drei\";\nimport { Suspense, useState, useRef } from \"react\";\nimport { IMAGE_BLOCK_HEIGHT, IMAGE_BLOCK_WIDTH } from \"../../utils/utilFormat\";\nimport { useScroll } from \"@react-three/drei\";\nimport { useFrame } from \"@react-three/fiber\";\nimport * as THREE from \"three\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImagePlane = _ref => {\n  _s();\n\n  let {\n    index,\n    imgUrl,\n    position = [0, 0, 0],\n    scale = [1, 1, 1],\n    color = new THREE.Color(),\n    ...props\n  } = _ref;\n  const imgRef = useRef();\n  const [hover, setHover] = useState(false);\n  const [click, setClick] = useState(false);\n  const [imgTexture] = useTexture([imgUrl]);\n  imgTexture.repeat.set(65 * imgTexture.image.height / (imgTexture.image.width * 250), 1);\n  imgTexture.offset.set(0.42, 0);\n  const scroll = useScroll();\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    position: position,\n    children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n      args: [IMAGE_BLOCK_WIDTH, IMAGE_BLOCK_HEIGHT]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n      color: \"#666666\",\n      map: imgTexture\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImagePlane, \"kdy1QK2VBilLKAO6VlonahxEyM8=\", false, function () {\n  return [useTexture, useScroll];\n});\n\n_c = ImagePlane;\nexport default ImagePlane;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagePlane\");","map":{"version":3,"sources":["/Users/chenyuf2/Desktop/three-shader/src/components/ImagePlane/ImagePlane.js"],"names":["useTexture","Suspense","useState","useRef","IMAGE_BLOCK_HEIGHT","IMAGE_BLOCK_WIDTH","useScroll","useFrame","THREE","ImagePlane","index","imgUrl","position","scale","color","Color","props","imgRef","hover","setHover","click","setClick","imgTexture","repeat","set","image","height","width","offset","scroll"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,MAA7B,QAA2C,OAA3C;AACA,SAASC,kBAAT,EAA6BC,iBAA7B,QAAsD,wBAAtD;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;;AACA,MAAMC,UAAU,GAAG,QAOb;AAAA;;AAAA,MAPc;AAClBC,IAAAA,KADkB;AAElBC,IAAAA,MAFkB;AAGlBC,IAAAA,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHO;AAIlBC,IAAAA,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJU;AAKlBC,IAAAA,KAAK,GAAG,IAAIN,KAAK,CAACO,KAAV,EALU;AAMlB,OAAGC;AANe,GAOd;AACJ,QAAMC,MAAM,GAAGd,MAAM,EAArB;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACoB,UAAD,IAAetB,UAAU,CAAC,CAACW,MAAD,CAAD,CAA/B;AACAW,EAAAA,UAAU,CAACC,MAAX,CAAkBC,GAAlB,CACG,KAAKF,UAAU,CAACG,KAAX,CAAiBC,MAAvB,IAAkCJ,UAAU,CAACG,KAAX,CAAiBE,KAAjB,GAAyB,GAA3D,CADF,EAEE,CAFF;AAIAL,EAAAA,UAAU,CAACM,MAAX,CAAkBJ,GAAlB,CAAsB,IAAtB,EAA4B,CAA5B;AACA,QAAMK,MAAM,GAAGvB,SAAS,EAAxB;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEM,QAAhB;AAAA,4BACE;AAAe,MAAA,IAAI,EAAE,CAACP,iBAAD,EAAoBD,kBAApB;AAArB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAmB,MAAA,KAAK,EAAC,SAAzB;AAAmC,MAAA,GAAG,EAAEkB;AAAxC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAzBD;;GAAMb,U;UAWiBT,U,EAMNM,S;;;KAjBXG,U;AA2BN,eAAeA,UAAf","sourcesContent":["import { useTexture } from \"@react-three/drei\";\nimport { Suspense, useState, useRef } from \"react\";\nimport { IMAGE_BLOCK_HEIGHT, IMAGE_BLOCK_WIDTH } from \"../../utils/utilFormat\";\nimport { useScroll } from \"@react-three/drei\";\nimport { useFrame } from \"@react-three/fiber\";\nimport * as THREE from \"three\";\nconst ImagePlane = ({\n  index,\n  imgUrl,\n  position = [0, 0, 0],\n  scale = [1, 1, 1],\n  color = new THREE.Color(),\n  ...props\n}) => {\n  const imgRef = useRef();\n  const [hover, setHover] = useState(false);\n  const [click, setClick] = useState(false);\n  const [imgTexture] = useTexture([imgUrl]);\n  imgTexture.repeat.set(\n    (65 * imgTexture.image.height) / (imgTexture.image.width * 250),\n    1\n  );\n  imgTexture.offset.set(0.42, 0);\n  const scroll = useScroll();\n\n  return (\n    <mesh position={position}>\n      <planeGeometry args={[IMAGE_BLOCK_WIDTH, IMAGE_BLOCK_HEIGHT]} />\n      <meshBasicMaterial color=\"#666666\" map={imgTexture} />\n    </mesh>\n  );\n};\n\nexport default ImagePlane;\n"]},"metadata":{},"sourceType":"module"}