{"ast":null,"code":"var _jsxFileName = \"/Users/chenyuf2/Desktop/three-shader/src/App.js\";\nimport * as THREE from \"three\";\nimport React, { useRef, useEffect, Suspense } from \"react\";\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport \"./App.css\";\nimport Scene from \"./components/Scene/Scene\";\nimport { useStore } from \"./store/store\";\nimport normalizeWheel from \"normalize-wheel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  // const { setScrollSpeed, setScrollDirection } = useStore();\n  // const updateMouseSpeed = (e) => {\n  //   const normalizedWheel = normalizeWheel(e);\n  //   const { pixelX, pixelY } = normalizedWheel;\n  //   // right: pixelX is negative\n  //   // left: pixelX is positive\n  //   // top: pixelY is positive\n  //   // bottom: pixelY is negative\n  //   //top and left move same direction\n  //   //bottom and right move same direction\n  //   if (pixelX < 0) {\n  //     setScrollDirection(\"R\");\n  //   } else if (pixelX > 0) {\n  //     setScrollDirection(\"L\");\n  //   } else if (pixelY < 0) {\n  //     setScrollDirection(\"R\");\n  //   } else if (pixelY > 0) {\n  //     setScrollDirection(\"L\");\n  //   } else {\n  //     setScrollDirection(\"L\");\n  //   }\n  //   const speedVal = Math.max(Math.abs(pixelX), Math.abs(pixelY));\n  //   setScrollSpeed(speedVal);\n  // };\n  return (\n    /*#__PURE__*/\n    // <div className=\"app\">\n    _jsxDEV(Canvas, {\n      linear: true,\n      orthographic: true,\n      colorManagement: true,\n      camera: {\n        position: [0, 0, 8]\n      },\n      dpr: Math.max(window.devicePixelRatio, 2),\n      gl: {\n        antialias: true,\n        alpha: false,\n        shadowMap: true\n      },\n      children: /*#__PURE__*/_jsxDEV(Scene, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this) // </div>\n\n  );\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chenyuf2/Desktop/three-shader/src/App.js"],"names":["THREE","React","useRef","useEffect","Suspense","Canvas","useFrame","Scene","useStore","normalizeWheel","App","position","Math","max","window","devicePixelRatio","antialias","alpha","shadowMap"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,oBAAjC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,cAAP,MAA2B,iBAA3B;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACE;AACA,YAAC,MAAD;AACE,MAAA,MAAM,MADR;AAEE,MAAA,YAAY,MAFd;AAGE,MAAA,eAAe,MAHjB;AAIE,MAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAAZ,OAJV;AAKE,MAAA,GAAG,EAAEC,IAAI,CAACC,GAAL,CAASC,MAAM,CAACC,gBAAhB,EAAkC,CAAlC,CALP;AAME,MAAA,EAAE,EAAE;AACFC,QAAAA,SAAS,EAAE,IADT;AAEFC,QAAAA,KAAK,EAAE,KAFL;AAGFC,QAAAA,SAAS,EAAE;AAHT,OANN;AAAA,6BAaE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA,YAFF,CAiBE;;AAjBF;AAmBD,CA9CD;;KAAMR,G;AAgDN,eAAeA,GAAf","sourcesContent":["import * as THREE from \"three\";\nimport React, { useRef, useEffect, Suspense } from \"react\";\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport \"./App.css\";\nimport Scene from \"./components/Scene/Scene\";\nimport { useStore } from \"./store/store\";\nimport normalizeWheel from \"normalize-wheel\";\nconst App = () => {\n  // const { setScrollSpeed, setScrollDirection } = useStore();\n  // const updateMouseSpeed = (e) => {\n  //   const normalizedWheel = normalizeWheel(e);\n  //   const { pixelX, pixelY } = normalizedWheel;\n\n  //   // right: pixelX is negative\n  //   // left: pixelX is positive\n  //   // top: pixelY is positive\n  //   // bottom: pixelY is negative\n\n  //   //top and left move same direction\n  //   //bottom and right move same direction\n  //   if (pixelX < 0) {\n  //     setScrollDirection(\"R\");\n  //   } else if (pixelX > 0) {\n  //     setScrollDirection(\"L\");\n  //   } else if (pixelY < 0) {\n  //     setScrollDirection(\"R\");\n  //   } else if (pixelY > 0) {\n  //     setScrollDirection(\"L\");\n  //   } else {\n  //     setScrollDirection(\"L\");\n  //   }\n  //   const speedVal = Math.max(Math.abs(pixelX), Math.abs(pixelY));\n  //   setScrollSpeed(speedVal);\n  // };\n  return (\n    // <div className=\"app\">\n    <Canvas\n      linear\n      orthographic\n      colorManagement\n      camera={{ position: [0, 0, 8] }}\n      dpr={Math.max(window.devicePixelRatio, 2)}\n      gl={{\n        antialias: true,\n        alpha: false,\n        shadowMap: true,\n      }}\n    >\n      {/* <primitive object={new THREE.AxesHelper(10)} /> */}\n      <Scene />\n    </Canvas>\n    // </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}