{"ast":null,"code":"var _jsxFileName = \"/Users/chenyuf2/Desktop/three-shader/src/components/ImagePlane/ImagePlane.js\",\n    _s = $RefreshSig$();\n\nimport { useTexture } from \"@react-three/drei\";\nimport { Suspense } from \"react\";\nimport { IMAGE_BLOCK_HEIGHT, IMAGE_BLOCK_WIDTH } from \"../../utils/utilFormat\";\nimport { useScroll } from \"@react-three/drei\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImagePlane = _ref => {\n  _s();\n\n  let {\n    index,\n    imgUrl,\n    position = [0, 0, 0],\n    scale = [1, 1, 1],\n    color = new THREE.Color(),\n    ...props\n  } = _ref;\n  const [imgTexture] = useTexture([imgUrl]);\n  imgTexture.repeat.set(65 * imgTexture.image.height / (imgTexture.image.width * 250), 1);\n  imgTexture.offset.set(0.42, 0);\n  const scroll = useScroll();\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: null,\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: position,\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [IMAGE_BLOCK_WIDTH, IMAGE_BLOCK_HEIGHT]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"#666666\",\n        map: imgTexture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImagePlane, \"zEs8mI7iCs5tVUQmURI5lnvA280=\", false, function () {\n  return [useTexture, useScroll];\n});\n\n_c = ImagePlane;\nexport default ImagePlane;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagePlane\");","map":{"version":3,"sources":["/Users/chenyuf2/Desktop/three-shader/src/components/ImagePlane/ImagePlane.js"],"names":["useTexture","Suspense","IMAGE_BLOCK_HEIGHT","IMAGE_BLOCK_WIDTH","useScroll","useFrame","ImagePlane","index","imgUrl","position","scale","color","THREE","Color","props","imgTexture","repeat","set","image","height","width","offset","scroll"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,kBAAT,EAA6BC,iBAA7B,QAAsD,wBAAtD;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,QAAT,QAAyB,oBAAzB;;;AACA,MAAMC,UAAU,GAAG,QAOb;AAAA;;AAAA,MAPc;AAClBC,IAAAA,KADkB;AAElBC,IAAAA,MAFkB;AAGlBC,IAAAA,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHO;AAIlBC,IAAAA,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJU;AAKlBC,IAAAA,KAAK,GAAG,IAAIC,KAAK,CAACC,KAAV,EALU;AAMlB,OAAGC;AANe,GAOd;AACJ,QAAM,CAACC,UAAD,IAAef,UAAU,CAAC,CAACQ,MAAD,CAAD,CAA/B;AACAO,EAAAA,UAAU,CAACC,MAAX,CAAkBC,GAAlB,CACG,KAAKF,UAAU,CAACG,KAAX,CAAiBC,MAAvB,IAAkCJ,UAAU,CAACG,KAAX,CAAiBE,KAAjB,GAAyB,GAA3D,CADF,EAEE,CAFF;AAIAL,EAAAA,UAAU,CAACM,MAAX,CAAkBJ,GAAlB,CAAsB,IAAtB,EAA4B,CAA5B;AACA,QAAMK,MAAM,GAAGlB,SAAS,EAAxB;AACA,sBACE,QAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,IAApB;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEK,QAAhB;AAAA,8BACE;AAAe,QAAA,IAAI,EAAE,CAACN,iBAAD,EAAoBD,kBAApB;AAArB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAmB,QAAA,KAAK,EAAC,SAAzB;AAAmC,QAAA,GAAG,EAAEa;AAAxC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAvBD;;GAAMT,U;UAQiBN,U,EAMNI,S;;;KAdXE,U;AAyBN,eAAeA,UAAf","sourcesContent":["import { useTexture } from \"@react-three/drei\";\nimport { Suspense } from \"react\";\nimport { IMAGE_BLOCK_HEIGHT, IMAGE_BLOCK_WIDTH } from \"../../utils/utilFormat\";\nimport { useScroll } from \"@react-three/drei\";\nimport { useFrame } from \"@react-three/fiber\";\nconst ImagePlane = ({\n  index,\n  imgUrl,\n  position = [0, 0, 0],\n  scale = [1, 1, 1],\n  color = new THREE.Color(),\n  ...props\n}) => {\n  const [imgTexture] = useTexture([imgUrl]);\n  imgTexture.repeat.set(\n    (65 * imgTexture.image.height) / (imgTexture.image.width * 250),\n    1\n  );\n  imgTexture.offset.set(0.42, 0);\n  const scroll = useScroll();\n  return (\n    <Suspense fallback={null}>\n      <mesh position={position}>\n        <planeGeometry args={[IMAGE_BLOCK_WIDTH, IMAGE_BLOCK_HEIGHT]} />\n        <meshBasicMaterial color=\"#666666\" map={imgTexture} />\n      </mesh>\n    </Suspense>\n  );\n};\n\nexport default ImagePlane;\n"]},"metadata":{},"sourceType":"module"}