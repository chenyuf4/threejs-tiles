{"ast":null,"code":"var _jsxFileName = \"/Users/chenyuf2/Desktop/three-shader/src/components/Scene/Scene.js\",\n    _s = $RefreshSig$();\n\nimport ImagePlane from \"../ImagePlane/ImagePlane\";\nimport { Suspense } from \"react\";\nimport { IMAGE_BLOCK_WIDTH, IMAGE_GAP } from \"../../utils/utilFormat\";\nimport { useThree } from \"@react-three/fiber\";\nimport { ScrollControls, Scroll } from \"@react-three/drei\";\nimport { imagesArr } from \"../../utils/utilFormat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Scene = () => {\n  _s();\n\n  const numImages = imagesArr.length;\n  const {\n    width\n  } = useThree(state => state.viewport);\n  const itemsLength = width + (numImages - 1) * (IMAGE_BLOCK_WIDTH + IMAGE_GAP);\n  return /*#__PURE__*/_jsxDEV(ScrollControls // horizontal\n  , {\n    damping: 6,\n    pages: itemsLength / width,\n    infinite: false,\n    children: /*#__PURE__*/_jsxDEV(Scroll, {\n      children: imagesArr.map((url, index) => {\n        const imagePosition = [0, IMAGE_BLOCK_WIDTH * index + IMAGE_GAP * index, 0];\n        return /*#__PURE__*/_jsxDEV(ImagePlane, {\n          index: index,\n          url: url,\n          position: imagePosition\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Scene, \"IpnJ6lEh1uS9mmdIchuxUYOu3jw=\", false, function () {\n  return [useThree];\n});\n\n_c = Scene;\nexport default Scene;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scene\");","map":{"version":3,"sources":["/Users/chenyuf2/Desktop/three-shader/src/components/Scene/Scene.js"],"names":["ImagePlane","Suspense","IMAGE_BLOCK_WIDTH","IMAGE_GAP","useThree","ScrollControls","Scroll","imagesArr","Scene","numImages","length","width","state","viewport","itemsLength","map","url","index","imagePosition"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,0BAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,iBAAT,EAA4BC,SAA5B,QAA6C,wBAA7C;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,cAAT,EAAyBC,MAAzB,QAAuC,mBAAvC;AACA,SAASC,SAAT,QAA0B,wBAA1B;;;AACA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,SAAS,GAAGF,SAAS,CAACG,MAA5B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYP,QAAQ,CAAEQ,KAAD,IAAWA,KAAK,CAACC,QAAlB,CAA1B;AACA,QAAMC,WAAW,GAAGH,KAAK,GAAG,CAACF,SAAS,GAAG,CAAb,KAAmBP,iBAAiB,GAAGC,SAAvC,CAA5B;AACA,sBACE,QAAC,cAAD,CACE;AADF;AAEE,IAAA,OAAO,EAAE,CAFX;AAGE,IAAA,KAAK,EAAEW,WAAW,GAAGH,KAHvB;AAIE,IAAA,QAAQ,EAAE,KAJZ;AAAA,2BAME,QAAC,MAAD;AAAA,gBACGJ,SAAS,CAACQ,GAAV,CAAc,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC7B,cAAMC,aAAa,GAAG,CACpB,CADoB,EAEpBhB,iBAAiB,GAAGe,KAApB,GAA4Bd,SAAS,GAAGc,KAFpB,EAGpB,CAHoB,CAAtB;AAKA,4BACE,QAAC,UAAD;AACE,UAAA,KAAK,EAAEA,KADT;AAGE,UAAA,GAAG,EAAED,GAHP;AAIE,UAAA,QAAQ,EAAEE;AAJZ,WAEOD,KAFP;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OAdA;AADH;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA9BD;;GAAMT,K;UAEcJ,Q;;;KAFdI,K;AAgCN,eAAeA,KAAf","sourcesContent":["import ImagePlane from \"../ImagePlane/ImagePlane\";\nimport { Suspense } from \"react\";\nimport { IMAGE_BLOCK_WIDTH, IMAGE_GAP } from \"../../utils/utilFormat\";\nimport { useThree } from \"@react-three/fiber\";\nimport { ScrollControls, Scroll } from \"@react-three/drei\";\nimport { imagesArr } from \"../../utils/utilFormat\";\nconst Scene = () => {\n  const numImages = imagesArr.length;\n  const { width } = useThree((state) => state.viewport);\n  const itemsLength = width + (numImages - 1) * (IMAGE_BLOCK_WIDTH + IMAGE_GAP);\n  return (\n    <ScrollControls\n      // horizontal\n      damping={6}\n      pages={itemsLength / width}\n      infinite={false}\n    >\n      <Scroll>\n        {imagesArr.map((url, index) => {\n          const imagePosition = [\n            0,\n            IMAGE_BLOCK_WIDTH * index + IMAGE_GAP * index,\n            0,\n          ];\n          return (\n            <ImagePlane\n              index={index}\n              key={index}\n              url={url}\n              position={imagePosition}\n            />\n          );\n        })}\n      </Scroll>\n    </ScrollControls>\n  );\n};\n\nexport default Scene;\n"]},"metadata":{},"sourceType":"module"}