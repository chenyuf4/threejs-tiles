{"ast":null,"code":"var _jsxFileName = \"/Users/chenyuf2/Desktop/threejs-tiles/src/components/Scene/Scene.js\",\n    _s = $RefreshSig$();\n\nimport ImagePlane from \"../ImagePlane/ImagePlane\";\nimport { Suspense } from \"react\";\nimport { IMAGE_BLOCK_WIDTH, IMAGE_GAP } from \"../../utils/utilFormat\";\nimport { useThree } from \"@react-three/fiber\";\nimport { imagesArr } from \"../../utils/utilFormat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Scene = () => {\n  _s();\n\n  const numImages = imagesArr.length;\n  const {\n    width\n  } = useThree(state => state.viewport);\n  const itemsLength = width + (numImages - 1) * (IMAGE_BLOCK_WIDTH + IMAGE_GAP);\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    children: imagesArr.map((url, index) => {\n      const imagePosition = [IMAGE_BLOCK_WIDTH * index + IMAGE_GAP * index, 0, 0];\n      return /*#__PURE__*/_jsxDEV(ImagePlane, {\n        index: index,\n        url: url,\n        position: imagePosition\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Scene, \"IpnJ6lEh1uS9mmdIchuxUYOu3jw=\", false, function () {\n  return [useThree];\n});\n\n_c = Scene;\nexport default Scene;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scene\");","map":{"version":3,"sources":["/Users/chenyuf2/Desktop/threejs-tiles/src/components/Scene/Scene.js"],"names":["ImagePlane","Suspense","IMAGE_BLOCK_WIDTH","IMAGE_GAP","useThree","imagesArr","Scene","numImages","length","width","state","viewport","itemsLength","map","url","index","imagePosition"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,0BAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,iBAAT,EAA4BC,SAA5B,QAA6C,wBAA7C;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,SAAT,QAA0B,wBAA1B;;;AACA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,SAAS,GAAGF,SAAS,CAACG,MAA5B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYL,QAAQ,CAAEM,KAAD,IAAWA,KAAK,CAACC,QAAlB,CAA1B;AACA,QAAMC,WAAW,GAAGH,KAAK,GAAG,CAACF,SAAS,GAAG,CAAb,KAAmBL,iBAAiB,GAAGC,SAAvC,CAA5B;AACA,sBACE;AAAA,cACGE,SAAS,CAACQ,GAAV,CAAc,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC7B,YAAMC,aAAa,GAAG,CACpBd,iBAAiB,GAAGa,KAApB,GAA4BZ,SAAS,GAAGY,KADpB,EAEpB,CAFoB,EAGpB,CAHoB,CAAtB;AAKA,0BACE,QAAC,UAAD;AACE,QAAA,KAAK,EAAEA,KADT;AAGE,QAAA,GAAG,EAAED,GAHP;AAIE,QAAA,QAAQ,EAAEE;AAJZ,SAEOD,KAFP;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KAdA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAvBD;;GAAMT,K;UAEcF,Q;;;KAFdE,K;AAyBN,eAAeA,KAAf","sourcesContent":["import ImagePlane from \"../ImagePlane/ImagePlane\";\nimport { Suspense } from \"react\";\nimport { IMAGE_BLOCK_WIDTH, IMAGE_GAP } from \"../../utils/utilFormat\";\nimport { useThree } from \"@react-three/fiber\";\nimport { imagesArr } from \"../../utils/utilFormat\";\nconst Scene = () => {\n  const numImages = imagesArr.length;\n  const { width } = useThree((state) => state.viewport);\n  const itemsLength = width + (numImages - 1) * (IMAGE_BLOCK_WIDTH + IMAGE_GAP);\n  return (\n    <group>\n      {imagesArr.map((url, index) => {\n        const imagePosition = [\n          IMAGE_BLOCK_WIDTH * index + IMAGE_GAP * index,\n          0,\n          0,\n        ];\n        return (\n          <ImagePlane\n            index={index}\n            key={index}\n            url={url}\n            position={imagePosition}\n          />\n        );\n      })}\n    </group>\n  );\n};\n\nexport default Scene;\n"]},"metadata":{},"sourceType":"module"}