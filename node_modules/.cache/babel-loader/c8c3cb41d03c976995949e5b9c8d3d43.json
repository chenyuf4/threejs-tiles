{"ast":null,"code":"var _jsxFileName = \"/Users/chenyuf2/Desktop/three-shader/src/components/Scene/Scene.js\",\n    _s = $RefreshSig$();\n\nimport ImagePlane from \"../ImagePlane/ImagePlane\";\nimport { Suspense } from \"react\";\nimport img1 from \"../../assets/image/img1.webp\";\nimport img2 from \"../../assets/image/img2.webp\";\nimport img3 from \"../../assets/image/img3.webp\";\nimport img4 from \"../../assets/image/img4.webp\";\nimport img5 from \"../../assets/image/img5.webp\";\nimport img6 from \"../../assets/image/img6.webp\";\nimport img7 from \"../../assets/image/img7.webp\";\nimport img8 from \"../../assets/image/img8.webp\";\nimport img9 from \"../../assets/image/img9.webp\";\nimport img10 from \"../../assets/image/img10.webp\";\nimport { IMAGE_BLOCK_WIDTH, IMAGE_GAP } from \"../../utils/utilFormat\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Scene = () => {\n  _s();\n\n  const {\n    camera\n  } = useThree();\n  console.log(camera);\n  const imagesArr = [img1, img2, img3, img4, img5, img6, img7, img8, img9, img10];\n  useFrame((state, delta) => {});\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: null,\n    children: imagesArr.map((url, index) => {\n      const imagePosition = [IMAGE_BLOCK_WIDTH * index + IMAGE_GAP * index, 0, 0];\n      return /*#__PURE__*/_jsxDEV(ImagePlane, {\n        imgUrl: url,\n        position: imagePosition\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Scene, \"K6LkdZnP8OJ6UK0tVtTtxiafG3Y=\", false, function () {\n  return [useThree, useFrame];\n});\n\n_c = Scene;\nexport default Scene;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scene\");","map":{"version":3,"sources":["/Users/chenyuf2/Desktop/three-shader/src/components/Scene/Scene.js"],"names":["ImagePlane","Suspense","img1","img2","img3","img4","img5","img6","img7","img8","img9","img10","IMAGE_BLOCK_WIDTH","IMAGE_GAP","useFrame","useThree","Scene","camera","console","log","imagesArr","state","delta","map","url","index","imagePosition"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,0BAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,SAASC,iBAAT,EAA4BC,SAA5B,QAA6C,wBAA7C;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,oBAAnC;;;AACA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAaF,QAAQ,EAA3B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,QAAMG,SAAS,GAAG,CAChBlB,IADgB,EAEhBC,IAFgB,EAGhBC,IAHgB,EAIhBC,IAJgB,EAKhBC,IALgB,EAMhBC,IANgB,EAOhBC,IAPgB,EAQhBC,IARgB,EAShBC,IATgB,EAUhBC,KAVgB,CAAlB;AAYAG,EAAAA,QAAQ,CAAC,CAACO,KAAD,EAAQC,KAAR,KAAkB,CAAE,CAArB,CAAR;AACA,sBACE,QAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,IAApB;AAAA,cACGF,SAAS,CAACG,GAAV,CAAc,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC7B,YAAMC,aAAa,GAAG,CACpBd,iBAAiB,GAAGa,KAApB,GAA4BZ,SAAS,GAAGY,KADpB,EAEpB,CAFoB,EAGpB,CAHoB,CAAtB;AAKA,0BAAO,QAAC,UAAD;AAAwB,QAAA,MAAM,EAAED,GAAhC;AAAqC,QAAA,QAAQ,EAAEE;AAA/C,SAAiBD,KAAjB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAPA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA5BD;;GAAMT,K;UACeD,Q,EAcnBD,Q;;;KAfIE,K;AA8BN,eAAeA,KAAf","sourcesContent":["import ImagePlane from \"../ImagePlane/ImagePlane\";\nimport { Suspense } from \"react\";\nimport img1 from \"../../assets/image/img1.webp\";\nimport img2 from \"../../assets/image/img2.webp\";\nimport img3 from \"../../assets/image/img3.webp\";\nimport img4 from \"../../assets/image/img4.webp\";\nimport img5 from \"../../assets/image/img5.webp\";\nimport img6 from \"../../assets/image/img6.webp\";\nimport img7 from \"../../assets/image/img7.webp\";\nimport img8 from \"../../assets/image/img8.webp\";\nimport img9 from \"../../assets/image/img9.webp\";\nimport img10 from \"../../assets/image/img10.webp\";\nimport { IMAGE_BLOCK_WIDTH, IMAGE_GAP } from \"../../utils/utilFormat\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nconst Scene = () => {\n  const { camera } = useThree();\n  console.log(camera);\n  const imagesArr = [\n    img1,\n    img2,\n    img3,\n    img4,\n    img5,\n    img6,\n    img7,\n    img8,\n    img9,\n    img10,\n  ];\n  useFrame((state, delta) => {});\n  return (\n    <Suspense fallback={null}>\n      {imagesArr.map((url, index) => {\n        const imagePosition = [\n          IMAGE_BLOCK_WIDTH * index + IMAGE_GAP * index,\n          0,\n          0,\n        ];\n        return <ImagePlane key={index} imgUrl={url} position={imagePosition} />;\n      })}\n    </Suspense>\n  );\n};\n\nexport default Scene;\n"]},"metadata":{},"sourceType":"module"}