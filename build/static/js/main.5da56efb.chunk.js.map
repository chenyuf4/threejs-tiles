{"version":3,"sources":["components/Home/Home.module.scss","assets/image/img1.webp","assets/image/img2.webp","assets/image/img3.webp","assets/image/img4.webp","assets/image/img5.webp","assets/image/img6.webp","assets/image/img7.webp","assets/image/img8.webp","assets/image/img9.webp","assets/image/img10.webp","assets/image/img11.webp","assets/image/img12.webp","assets/image/img13.webp","assets/image/img14.webp","assets/image/img15.webp","assets/image/img16.webp","assets/image/img17.webp","assets/image/img18.webp","assets/image/img19.webp","assets/image/img20.webp","assets/image/img21.webp","assets/image/img22.webp","assets/image/img23.webp","assets/image/img24.webp","utils/utilFormat.js","components/ImagePlane/ImagePlane.js","store/store.js","components/Scene/Scene.js","components/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","IMAGE_GAP","IMAGE_BLOCK_WIDTH","imagesArr","img1","img2","img3","img4","img5","img6","img7","img8","img9","img10","img11","img12","img13","img14","img15","img16","img17","img18","img19","img20","img21","img22","img23","img24","damp","THREE","ImagePlane","index","position","scale","rotation","Math","PI","color","url","props","imgRef","useRef","useState","hover","setHover","useTexture","imgTexture","repeat","set","image","height","width","offset","numImages","length","useScroll","useFrame","state","delta","current","material","grayscale","lerp","Image","ref","onPointerOver","onPointerOut","useStore","create","scrollSpeed","setScrollSpeed","speed","scrollDirection","setScrollDirection","dir","Scene","useThree","viewport","leftScreenBoundary","rightScreenBoundary","defaultScales","Array","from","map","_","slidingLength","defaultPositions","initialPosX","item","setRotation","positions","setPositions","scales","setScales","newPositions","x","y","z","leftImgBoundary","pos","nextPos","speedRatio","normalizeSpeed","rotationRatio","rotationVal","newScales","scaleX","scaleY","scaleZ","curScaleX","curScaleY","newPosX","scaleRatio","abs","lerpValY","Home","className","clsx","styles","App","onWheel","mouse","normalizeWheel","pixelX","pixelY","horizonal","speedVal","min","max","fallback","linear","orthographic","dpr","gl","antialias","PerspectiveCamera","makeDefault","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5da56efb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"home-container\":\"Home_home-container__1f0oE\",\"name-header\":\"Home_name-header__290fH\",\"about-header\":\"Home_about-header__1DDE_\",\"footer-container\":\"Home_footer-container__21R_x\",\"intro-container\":\"Home_intro-container__XxxNt\",\"social-app-container\":\"Home_social-app-container__37cIw\"};","export default __webpack_public_path__ + \"static/media/img1.134e6f4b.webp\";","export default __webpack_public_path__ + \"static/media/img2.c641f2a9.webp\";","export default __webpack_public_path__ + \"static/media/img3.71989de9.webp\";","export default __webpack_public_path__ + \"static/media/img4.9f79fee9.webp\";","export default __webpack_public_path__ + \"static/media/img5.cb96e25f.webp\";","export default __webpack_public_path__ + \"static/media/img6.0da57a5a.webp\";","export default __webpack_public_path__ + \"static/media/img7.f62dd523.webp\";","export default __webpack_public_path__ + \"static/media/img8.ba5d1d57.webp\";","export default __webpack_public_path__ + \"static/media/img9.1eb902d5.webp\";","export default __webpack_public_path__ + \"static/media/img10.c12918d1.webp\";","export default __webpack_public_path__ + \"static/media/img11.cb201aa2.webp\";","export default __webpack_public_path__ + \"static/media/img12.ccffbde8.webp\";","export default __webpack_public_path__ + \"static/media/img13.85a0314a.webp\";","export default __webpack_public_path__ + \"static/media/img14.70c45ff1.webp\";","export default __webpack_public_path__ + \"static/media/img15.cc31f68e.webp\";","export default __webpack_public_path__ + \"static/media/img16.13d86b5e.webp\";","export default __webpack_public_path__ + \"static/media/img17.38f2e5d8.webp\";","export default __webpack_public_path__ + \"static/media/img18.8f20341f.webp\";","export default __webpack_public_path__ + \"static/media/img19.44560b98.webp\";","export default __webpack_public_path__ + \"static/media/img20.b8885126.webp\";","export default __webpack_public_path__ + \"static/media/img21.2e8820ce.webp\";","export default __webpack_public_path__ + \"static/media/img22.8428f597.webp\";","export default __webpack_public_path__ + \"static/media/img23.216c647c.webp\";","export default __webpack_public_path__ + \"static/media/img24.10924316.webp\";","import img1 from \"../assets/image/img1.webp\";\nimport img2 from \"../assets/image/img2.webp\";\nimport img3 from \"../assets/image/img3.webp\";\nimport img4 from \"../assets/image/img4.webp\";\nimport img5 from \"../assets/image/img5.webp\";\nimport img6 from \"../assets/image/img6.webp\";\nimport img7 from \"../assets/image/img7.webp\";\nimport img8 from \"../assets/image/img8.webp\";\nimport img9 from \"../assets/image/img9.webp\";\nimport img10 from \"../assets/image/img10.webp\";\nimport img11 from \"../assets/image/img11.webp\";\nimport img12 from \"../assets/image/img12.webp\";\nimport img13 from \"../assets/image/img13.webp\";\nimport img14 from \"../assets/image/img14.webp\";\nimport img15 from \"../assets/image/img15.webp\";\nimport img16 from \"../assets/image/img16.webp\";\nimport img17 from \"../assets/image/img17.webp\";\nimport img18 from \"../assets/image/img18.webp\";\nimport img19 from \"../assets/image/img19.webp\";\nimport img20 from \"../assets/image/img20.webp\";\nimport img21 from \"../assets/image/img21.webp\";\nimport img22 from \"../assets/image/img22.webp\";\nimport img23 from \"../assets/image/img23.webp\";\nimport img24 from \"../assets/image/img24.webp\";\n\nexport const IMAGE_GAP = 15;\nexport const IMAGE_BLOCK_HEIGHT = 250;\nexport const IMAGE_BLOCK_WIDTH = 65;\nexport const DAMP_FACTOR = 20;\nexport const LERP_FACTOR = 0.05;\nexport const imagesArr = [\n  img1,\n  img2,\n  img3,\n  img4,\n  img5,\n  img6,\n  img7,\n  img8,\n  img9,\n  img10,\n  img11,\n  img12,\n  img13,\n  img14,\n  img15,\n  img16,\n  img17,\n  img18,\n  img19,\n  img20,\n  img21,\n  img22,\n  img23,\n  img24,\n];\n","import { useTexture } from \"@react-three/drei\";\nimport { Suspense, useState, useRef, useEffect } from \"react\";\nimport {\n  IMAGE_BLOCK_HEIGHT,\n  IMAGE_BLOCK_WIDTH,\n  imagesArr,\n  IMAGE_GAP,\n} from \"../../utils/utilFormat\";\nimport { useScroll, Image } from \"@react-three/drei\";\nimport { useFrame } from \"@react-three/fiber\";\nimport * as THREE from \"three\";\nimport { lerp } from \"../../utils/utilsFn\";\nconst damp = THREE.MathUtils.damp;\nconst ImagePlane = ({\n  index,\n  position = [0, 0, 0],\n  scale = [IMAGE_BLOCK_WIDTH, IMAGE_BLOCK_HEIGHT, 1],\n  rotation = [0, Math.PI / 4, 0],\n  color = new THREE.Color(),\n  url,\n  ...props\n}) => {\n  const imgRef = useRef();\n  const [hover, setHover] = useState(false);\n  const [click, setClick] = useState(false);\n  const [imgTexture] = useTexture([url]);\n\n  imgTexture.repeat.set(\n    (IMAGE_BLOCK_WIDTH * imgTexture.image.height) /\n      (IMAGE_BLOCK_HEIGHT * imgTexture.image.width),\n    1\n  );\n  imgTexture.offset.set(0.42, 0);\n  const numImages = imagesArr.length;\n  const scroll = useScroll();\n\n  const rigthBoundary = position[0];\n  const leftBoundary =\n    position[0] - (numImages - 1) * (IMAGE_BLOCK_WIDTH + IMAGE_GAP);\n  useFrame((state, delta) => {\n    if (!imgRef.current) return;\n    // const y = scroll.curve(index / numImages - 1.5 / numImages, 4 / numImages);\n    // imgRef.current.material.scale[1] = imgRef.current.scale.y = damp(\n    //   imgRef.current.scale.y,\n    //   4 + y,\n    //   8,\n    //   delta\n    // );\n    // imgRef.current.material.scale[0] = imgRef.current.scale.x = damp(\n    //   imgRef.current.scale.x,\n    //   1,\n    //   6,\n    //   delta\n    // );\n    imgRef.current.material.grayscale = damp(\n      imgRef.current.material.grayscale,\n      hover ? 0 : 1,\n      6,\n      delta\n    );\n\n    imgRef.current.material.color.lerp(\n      color.set(hover ? \"white\" : \"#aaa\"),\n      hover ? 0.3 : 0.1\n    );\n  });\n  return (\n    <Image\n      ref={imgRef}\n      url={url}\n      position={position}\n      scale={scale}\n      rotation={rotation}\n      onPointerOver={() => setHover(true)}\n      onPointerOut={() => setHover(false)}\n      {...props}\n    />\n  );\n};\n\nexport default ImagePlane;\n","import create from \"zustand\";\n\nexport const useStore = create((set) => ({\n  // scrollSpeed of image blocks\n  scrollSpeed: 0, // always >= 0\n  setScrollSpeed: (speed) => set(() => ({ scrollSpeed: speed })),\n  // scrollDirection of image blocks\n  scrollDirection: \"L\", //can only be \"L\" or \"R\"\n  setScrollDirection: (dir) => set(() => ({ scrollDirection: dir })),\n}));\n","import ImagePlane from \"../ImagePlane/ImagePlane\";\nimport { Suspense, useState } from \"react\";\nimport {\n  IMAGE_BLOCK_WIDTH,\n  IMAGE_GAP,\n  DAMP_FACTOR,\n  LERP_FACTOR,\n  IMAGE_BLOCK_HEIGHT,\n} from \"../../utils/utilFormat\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { imagesArr } from \"../../utils/utilFormat\";\nimport { useStore } from \"../../store/store\";\nimport * as THREE from \"three\";\nimport produce from \"immer\";\n\nconst { lerp, damp } = THREE.MathUtils;\nconst Scene = () => {\n  const { scrollSpeed, scrollDirection, setScrollDirection, setScrollSpeed } =\n    useStore();\n  const numImages = imagesArr.length;\n  const { width, height } = useThree((state) => state.viewport);\n  const leftScreenBoundary = -width / 2;\n  const rightScreenBoundary = width / 2;\n\n  const defaultScales = Array.from({ length: numImages }).map((_, index) => [\n    IMAGE_BLOCK_WIDTH,\n    IMAGE_BLOCK_HEIGHT,\n    1,\n  ]);\n  const slidingLength = numImages * (IMAGE_BLOCK_WIDTH + IMAGE_GAP);\n  const defaultPositions = Array.from({ length: numImages }).map((_, index) => {\n    let initialPosX = IMAGE_BLOCK_WIDTH * index + IMAGE_GAP * index;\n    const leftImgBoundary = initialPosX - IMAGE_BLOCK_WIDTH / 2;\n    const rightImgBoundary = initialPosX + IMAGE_BLOCK_WIDTH / 2;\n    if (leftImgBoundary >= rightScreenBoundary) {\n      initialPosX -= slidingLength;\n    }\n    return [initialPosX, 0, 0];\n  });\n  const defaultBoundary = defaultPositions.map((item, index) => [\n    item[0] - (numImages - 1) * (defaultScales[index][0] + IMAGE_GAP),\n    item[0],\n  ]);\n  const [rotation, setRotation] = useState([0, 0, 0]);\n  const [positions, setPositions] = useState(defaultPositions);\n  const [scales, setScales] = useState(defaultScales);\n\n  useFrame((state, delta) => {\n    let newPositions = Array.from({ length: numImages }).map((_, index) => {\n      let [x, y, z] = positions[index];\n      let leftImgBoundary = x - IMAGE_BLOCK_WIDTH - IMAGE_GAP;\n      let rightImgBoundary = x + IMAGE_BLOCK_WIDTH + IMAGE_GAP;\n      if (scrollDirection === \"L\" && rightImgBoundary <= leftScreenBoundary) {\n        x += slidingLength;\n      }\n      if (scrollDirection === \"R\" && leftImgBoundary >= rightScreenBoundary) {\n        x -= slidingLength;\n      }\n      return [x, y, z];\n    });\n    newPositions = newPositions.map((pos, index) => {\n      let [x, y, z] = pos;\n      let nextPos =\n        x +\n        (scrollDirection === \"L\"\n          ? -scrollSpeed * DAMP_FACTOR\n          : +scrollSpeed * DAMP_FACTOR);\n\n      nextPos = lerp(x, nextPos, 0.02);\n\n      return [nextPos, y, z];\n    });\n\n    //calculate how many pixels have been moved from very beginning state\n    const leftScrollBoundary = -(4 * IMAGE_BLOCK_WIDTH + 3 * IMAGE_GAP);\n    const rightScrollBoundary = -leftScrollBoundary;\n\n    const splitSpeed = (speedRatio) => {\n      if (speedRatio >= 0.6) {\n        return 1;\n      } else if (speedRatio >= 0.25) {\n        return 0.8;\n      }\n      return speedRatio;\n    };\n    const normalizeSpeed = scrollSpeed / 120; //scale to normalizeSpeed between 0 and 1\n    const speedLevel = splitSpeed(normalizeSpeed);\n    //right, rotation > 0\n    //left, rotation < 0\n    const rotationRatio = scrollSpeed > 0 ? (Math.PI / 4) * normalizeSpeed : 0;\n    const rotationVal = damp(\n      rotation[1],\n      scrollDirection === \"R\" ? rotationRatio : -rotationRatio,\n      20,\n      delta\n    );\n    setRotation([0, rotationVal, 0]);\n\n    const newScales = Array.from({ length: numImages }).map((_, index) => {\n      const [scaleX, scaleY, scaleZ] = defaultScales[index];\n      const [curScaleX, curScaleY, curScaleZ] = scales[index];\n      const [oldPosX, oldPosY, oldPosZ] = positions[index];\n      const [newPosX, newPosY, newPosZ] = newPositions[index];\n      let withinRange = 1;\n      if (newPosX <= leftScrollBoundary || newPosX >= rightScrollBoundary) {\n        withinRange = 0;\n      } else if (scrollSpeed === 0) {\n        withinRange = 0;\n      } else {\n        withinRange = (1 - Math.abs(newPosX) / rightScrollBoundary) * 1.2;\n      }\n\n      const scaleRatio = withinRange * normalizeSpeed;\n\n      const lerpValY = damp(curScaleY, scaleY * (1 + scaleRatio), 40, delta);\n      const lerpValX = damp(curScaleX, scaleX * (1 + scaleRatio), 40, delta);\n      return [lerpValX, lerpValY, scaleZ];\n    });\n    setPositions(newPositions);\n    setScales(newScales);\n    setScrollSpeed(0);\n  });\n\n  return (\n    <group>\n      {imagesArr.map((url, index) => {\n        return (\n          <ImagePlane\n            index={index}\n            key={index}\n            url={url}\n            scale={scales[index]}\n            rotation={rotation}\n            position={positions[index]}\n          />\n        );\n      })}\n    </group>\n  );\n};\n\nexport default Scene;\n","import styles from \"./Home.module.scss\";\nimport clsx from \"clsx\";\nconst Home = () => {\n  return (\n    <div\n      className={clsx(\n        styles[\"home-container\"],\n        \"position-absolute\",\n        \"h-100\",\n        \"w-100\",\n        \"p-5\",\n        \"d-flex\",\n        \"flex-column\",\n        \"justify-content-between\"\n      )}\n    >\n      <div className=\"d-flex justify-content-between align-items-center\">\n        <div className={styles[\"name-header\"]}>STEPHEN</div>\n        <div className={clsx(\"JW-font\", styles[\"about-header\"])}>ABOUT</div>\n      </div>\n      <div\n        className={clsx(\n          \"d-flex\",\n          \"justify-content-between\",\n          \"JW-font\",\n          \"font-sm\",\n          \"d-flex\",\n          \"justify-content-between\",\n          \"align-items-end\",\n          \"w-100\"\n        )}\n      >\n        <div className={styles[\"intro-container\"]}>\n          <div>FRONT-END BEGINEER</div>\n          <div>WORK IN BYTEDANCE</div>\n        </div>\n        <div className={styles[\"social-app-container\"]}>\n          <div>EMAIL</div>\n          <div>INSTAGRAM</div>\n          <div>LINKEDIN</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useRef } from \"react\";\nimport { Suspense } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport \"./App.scss\";\nimport Scene from \"./components/Scene/Scene\";\nimport Home from \"./components/Home/Home\";\nimport normalizeWheel from \"normalize-wheel\";\nimport { useStore } from \"./store/store\";\nimport { PerspectiveCamera } from \"@react-three/drei\";\nconst App = () => {\n  // left > 0\n  // right < 0\n  // top > 0\n  //bottom < 0\n  const { setScrollDirection, setScrollSpeed } = useStore();\n  const tilesOnWheel = (mouse) => {\n    const { pixelX, pixelY } = normalizeWheel(mouse);\n    let horizonal = true;\n    if (Math.abs(pixelY) > Math.abs(pixelX)) {\n      horizonal = false;\n    }\n    if (horizonal) {\n      if (pixelX < 0) {\n        setScrollDirection(\"R\");\n      } else {\n        setScrollDirection(\"L\");\n      }\n    } else {\n      if (pixelY < 0) {\n        setScrollDirection(\"R\");\n      } else {\n        setScrollDirection(\"L\");\n      }\n    }\n    const speedVal = Math.min(\n      Math.max(Math.abs(pixelX), Math.abs(pixelY)),\n      120\n    );\n    //scroll speed is at most 120.\n    setScrollSpeed(speedVal);\n  };\n  const refContainer = useRef();\n  return (\n    <>\n      <div\n        className=\"w-100 h-100 position-relative canvas-container remove-canvas-scroll-bar\"\n        onWheel={tilesOnWheel}\n      >\n        <Suspense fallback={null}>\n          <Canvas\n            linear\n            orthographic\n            dpr={[1, 1.5]}\n            gl={{\n              antialias: true,\n            }}\n          >\n            <PerspectiveCamera makeDefault position={[0, 0, 900]} />\n            <Scene />\n          </Canvas>\n        </Suspense>\n      </div>\n      <Home />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}